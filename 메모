@RequiredArgsConstructor
- Lombok으로 스프링에서 DI(의존성 주입)의 방법 중에 생성자 주입을 임의의 코드없이 자동으로 설정해주는 어노테이션
- 초기화 되지 않은 final 필드나 @NonNull 어노테이션이 붙은 필드에 대해 생성자를 만들어 줌
- @Autowired를 사용하지 않고 의존성 주입


@Data
- @toString + @getter + @setter + @RequiredArgsConstructor + @EqualsAndHashCode


@toString
- toString() 메서드를 생성한다. @ToString(exclude = {"제외값"})으로 제외시키고 싶은 값을 설정할 수 있음
- 객체가 가지고 있는 정보나 값들을 문자열로 만들어 리턴 하는 것


@EqualAndHashCode
- equals(), hashCode() 메서드를 생성한다.
- equals : 2개의 객체가 동일한지 검사하기 위해 사용
- hashCode : 런타임중 객체의 유일한 integer 값을 반환


@Getter
- private로 설정된 필드 변수를 외부에서 접근하려고 만든 것


@Setter
- private로 설정된 필드 변수를 외부에서 수정하려고 만든 것


@Bean
- 메서드 레벨에서 사용되며, 해당 메서드가 스프링 컨테이너에 의해 관리되는 빈을 생성하도록 선언
- 주로 Java 설정(Java Config) 방식으로 스프링 빈을 정의할 때 사용
- 스프링 컨테이너는 이러한 @Bean이 붙은 메서드가 반환하는 객체를 싱글톤으로 관리하며, 다른 빈에서 주입하여 사용할 수 있음
- @Configuration 안에서 @Bean을 사용해야 싱글톤을 보장받을 수 있음


@Configuration
- 클래스 레벨에서 사용되며, 해당 클래스가 스프링의 설정 파일임을 나타냄
- 이 어노테이션이 부여된 클래스는 한 개 이상의 @Bean 메서드를 포함하고 있으며, 스프링 컨테이너에게 빈을 정의하는 설정 정보를 제공


@Component
- 자동으로 스프링 컨테이너에 빈을 등록하는 방법
- 컴포넌트 스캔(Component Scan)을 사용해 @Component 어노테이션이 있는 클래스들을 찾아서 자동으로 빈 등록을 해줌
- @Component를 갖는 어노테이션으로 @Controller, @Service, @Repository 등이 있으며 앞서 살펴봤던 @Configuration 역시 안에 @Component를 가지고 있음


@Service
- 스프링에서 서비스를 지정하는 어노테이션
- 해당 클래스를 루트 컨테이너에 Bean 객체로 생성
- 캡슐화 없이 모델 내 단독 인터페이스로써 제공되는 동작을 의미
- Business Layer에서 사용할 Service임을 명시


@Controller
- 스프링에서 컨트롤러를 지정하는 어노테이션
- Model객체를 만들어 데이터를 담고, View를 반환
- @RequestMapping 어노테이션이 달린 메소드를 감지


@Repository
- 해당 클래스가 데이터 액세스를 담당하는 리포지토리(Repository) 클래스임을 나타냄
- 데이터를 영구적으로 저장하거나 검색하기 위한 메서드들을 포함하며, 주로 데이터베이스와의 상호작용을 담당하는 클래스
- Spring 컨테이너에 빈(Bean)으로 등록, 해당 클래스를 자동으로 스캔하여 빈으로 관리


antMatchers()
- URL 패턴을 지정하여 해당 패턴에 대한 접근 권한을 설정하는 데 사용
- Ant 스타일의 패턴을 사용하여 URL을 매칭
- ex)  `antMatchers("/admin/")`**는 "/admin/"으로 시작하는 모든 URL에 대한 접근 권한 설정을 의미
- 일반적으로 대부분의 경우에는 antMatchers()를 사용하여 URL 패턴별로 접근 권한을 설정


requestMatchers()
- 요청 타입에 따라 URL 패턴을 지정하여 해당 요청 타입에 대한 보안 설정을 할 때 사용
- 요청의 종류는 HTTP 메서드(GET, POST 등)나 서블릿 경로를 기반으로 지정할 수 있음
- ex ) `requestMatchers(HttpMethod.GET, "/public/")`**는 HTTP GET 요청 중 "/public/"으로 시작하는 URL에 대한 보안 설정을 의미
- 특정한 요청 타입에 대한 보안 설정이 필요할 때 사용